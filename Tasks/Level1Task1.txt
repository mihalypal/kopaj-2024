#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
5,7,2

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
6,5,8

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
5,9,4

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
1,3,7

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
0,8,8

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
0,4,8

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
6,1,0

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
8,0,3

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
1,1,7

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
0,1,7

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
5,8,8

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
5,5,8

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
4,9,5

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
6,1,9

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
2,3,5

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
4,1,3

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
1,7,5

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
4,8,2

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
4,6,7

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
4,4,0

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
8,6,3

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
3,1,3

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
8,8,3

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
6,2,0

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
0,2,2

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
9,0,8

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
7,4,5

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
6,1,9

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
0,1,0

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
8,0,9

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
6,3,5

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
0,0,8

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
4,3,7

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
4,9,7

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
5,2,7

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
2,9,4

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
5,1,7

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
2,7,7

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
0,6,6

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
4,1,4

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
4,6,4

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
3,4,4

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
9,0,3

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
4,3,5

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
7,3,7

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
9,4,1

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
8,5,6

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
1,7,8

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
4,2,9

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
8,0,1

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
2,1,1

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
7,8,5

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
9,2,7

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
6,7,8

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
7,3,1

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
8,4,1

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
9,5,3

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
7,1,7

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
1,7,0

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
6,0,4

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
8,8,6

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
9,9,1

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
0,1,5

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
9,6,8

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
5,2,7

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
8,8,1

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
1,7,4

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
6,8,2

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
6,2,4

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
5,2,4

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
4,8,9

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
4,4,3

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
3,1,2

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
6,1,1

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
0,1,7

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
9,8,7

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
5,2,2

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
4,4,4

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
6,6,3

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
7,9,2

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
4,7,3

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
1,4,8

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
2,0,5

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
0,4,8

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
4,9,6

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
6,9,8

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
6,4,1

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
1,0,8

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
1,1,1

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
2,4,5

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
6,5,4

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
2,2,1

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
2,5,2

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
0,0,0

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
9,4,2

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
6,9,3

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
1,0,7

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
7,0,7

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
7,5,7

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
2,6,9

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
9,0,7

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
6,2,5

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
3,4,0

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
9,9,0

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
5,4,9

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
3,4,1

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
9,0,3

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
5,1,8

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
4,7,7

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
0,9,3

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
4,4,1

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
5,4,1

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
6,7,5

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
8,7,2

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
3,2,2

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
5,2,2

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
1,2,4

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
3,6,5

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
0,2,8

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
8,2,6

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
7,9,4

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
6,5,3

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
7,5,4

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
1,0,8

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
5,3,8

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
0,6,4

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
8,4,2

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
0,3,4

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
4,4,6

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
2,7,1

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
4,3,2

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
5,4,8

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
1,4,9

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
5,7,7

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
9,5,5

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
2,3,0

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
2,1,2

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
6,1,7

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
6,2,4

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
3,8,8

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
9,4,9

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
4,8,7

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
0,1,2

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
2,9,9

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
0,4,0

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
1,8,5

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
2,0,7

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
6,5,6

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
8,4,7

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
5,0,9

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
9,9,5

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
2,0,5

******************************************
************* N E W  T A S K *************
******************************************

