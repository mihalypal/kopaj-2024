#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
5,7,2

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
6,5,8

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
5,9,4

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
1,3,7

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
0,8,8

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
0,4,8

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
6,1,0

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
8,0,3

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
1,1,7

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
0,1,7

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
5,8,8

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
5,5,8

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
4,9,5

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
6,1,9

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
2,3,5

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
4,1,3

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
1,7,5

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
4,8,2

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
4,6,7

******************************************
************* N E W  T A S K *************
******************************************

#####################
		HEADER:
#####################
Content-Length: 5
Host: 10.33.1.61:1234
User-Agent: Java-http-client/17.0.9
Content-Type: text/plain
Task-Description: You will get three dimensions of a brick and you have to return the smallest possible hole that the brick can fit in. The hole is represented by 2 integers separated by a comma, the first value needs to be the smaller. For example: 4,3,2 -> 2,3

#####################
		BODY:
#####################
4,4,0

******************************************
************* N E W  T A S K *************
******************************************

